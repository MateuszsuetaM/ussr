# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-11-16 12:58
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id_address', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('street', models.CharField(blank=True, max_length=100, null=True)),
                ('house_no', models.CharField(blank=True, max_length=5, null=True)),
                ('apartment_no', models.CharField(blank=True, max_length=5, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('zip', models.CharField(blank=True, max_length=10, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'verbose_name': 'Adres',
                'verbose_name_plural': 'Lista adresow',
                'db_table': 'address',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContactType',
            fields=[
                ('id_contact_type', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('contact_type_name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Typ kontaktu',
                'verbose_name_plural': 'Slownik typow kontaktu',
                'db_table': 'contact_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CountryDict',
            fields=[
                ('country', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Panstwo',
                'verbose_name_plural': 'Slownik panstw',
                'db_table': 'country_dict',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Currrency',
            fields=[
                ('id_currency', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('currency_name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('ratio_to_main_currency', models.FloatField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Waluta',
                'verbose_name_plural': 'Slownik walut',
                'db_table': 'currrency',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourcesUsage',
            fields=[
                ('id_resources_usage', models.AutoField(primary_key=True, serialize=False)),
                ('start_timestamp', models.DateTimeField(db_column='start_timestamp')),
                ('finish_timestamp', models.DateTimeField(db_column='finish_timestamp')),
            ],
            options={
                'verbose_name': 'Uzycie zasobu',
                'verbose_name_plural': 'Wykorzystanie zasobow',
                'db_table': 'resources_usage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourcesUsageParams',
            fields=[
                ('id_resources_usage_params', models.AutoField(db_column='resources_usage_params_id', primary_key=True, serialize=False)),
                ('allow_using_machine_without_service_days_before_date', models.IntegerField(default=100)),
            ],
            options={
                'verbose_name': 'Parametry modulu wykorzystania zasobow',
                'verbose_name_plural': 'Parametry modulu wykorzystania zasobow',
                'db_table': 'resources_usage_params',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SexDict',
            fields=[
                ('id_sex_dict', models.CharField(max_length=1, primary_key=True, serialize=False)),
                ('sex', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'verbose_name': 'Plec',
                'verbose_name_plural': 'Slownik plci',
                'db_table': 'sex_dict',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimeSlotList',
            fields=[
                ('id_time_slot', models.DateTimeField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Sloty czasowe',
                'verbose_name_plural': 'Sloty czasowe',
                'db_table': 'time_slot_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimeSlotParams',
            fields=[
                ('id_time_slot_params', models.AutoField(db_column='time_slot_params_id', primary_key=True, serialize=False)),
                ('time_slot_minutes', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Parametry slotow czasowych',
                'verbose_name_plural': 'Parametry slotow czasowych',
                'db_table': 'time_slot_params',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkdayCalendar',
            fields=[
                ('id_workday_calendar', models.DateField(primary_key=True, serialize=False)),
                ('is_workday', models.BooleanField()),
                ('work_start', models.TimeField(blank=True, null=True)),
                ('work_end', models.TimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Kaledarz roboczy',
                'verbose_name_plural': 'Kalendarze robocze',
                'db_table': 'workday_calendar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkdayCalendarParams',
            fields=[
                ('id_workday_calendar_params', models.AutoField(db_column='workday_calendar_params_id', primary_key=True, serialize=False)),
                ('default_workday_start_time', models.TimeField(blank=True, null=True)),
                ('default_workday_end_time', models.TimeField(blank=True, null=True)),
                ('default_saturday_start_time', models.TimeField(blank=True, null=True)),
                ('default_saturday_end_time', models.TimeField(blank=True, null=True)),
                ('default_is_saturday_workday', models.BooleanField()),
            ],
            options={
                'verbose_name': 'Paramatry kalendarza',
                'verbose_name_plural': 'Parametry kalendarza',
                'db_table': 'workday_calendar_params',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ZipCodesDict',
            fields=[
                ('id_zip_codes_dict', models.AutoField(primary_key=True, serialize=False)),
                ('zip', models.CharField(blank=True, max_length=10, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Kod pocztowy',
                'verbose_name_plural': 'Slownik kodow pocztowych',
                'db_table': 'zip_codes_dict',
                'managed': False,
            },
        ),
    ]
