# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-13 16:23
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('clients', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TClientBlockedListV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_client', models.IntegerField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('client_name', models.CharField(blank=True, max_length=200, null=True)),
                ('blocked_notes', models.CharField(blank=True, max_length=400, null=True)),
                ('blocked_reason_name', models.CharField(blank=True, max_length=200, null=True)),
                ('sum_payment_sum', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'client_blocked_list_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TClientDetailsV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_client', models.IntegerField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('is_company', models.NullBooleanField()),
                ('client_name', models.CharField(blank=True, max_length=200, null=True)),
                ('nip', models.CharField(blank=True, max_length=11, null=True)),
                ('sex', models.CharField(blank=True, max_length=1, null=True)),
                ('is_blocked', models.NullBooleanField()),
                ('blocked_reason_id', models.CharField(blank=True, max_length=10, null=True)),
                ('blocked_notes', models.CharField(blank=True, max_length=400, null=True)),
                ('is_confirmed', models.NullBooleanField()),
                ('is_rejected', models.NullBooleanField()),
                ('default_invoice', models.NullBooleanField()),
                ('default_reminder_sms_minutes', models.IntegerField(blank=True, null=True)),
                ('default_reminder_email_minutes', models.IntegerField(blank=True, null=True)),
                ('default_finished_info_sms', models.IntegerField(blank=True, null=True)),
                ('default_finished_info_email', models.IntegerField(blank=True, null=True)),
                ('client_discount_percent_sum', models.FloatField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=20, null=True)),
                ('client_notes', models.CharField(blank=True, max_length=400, null=True)),
                ('prefered_contact_type', models.CharField(blank=True, max_length=10, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('street', models.CharField(blank=True, max_length=100, null=True)),
                ('apartment_no', models.CharField(blank=True, max_length=5, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('house_no', models.CharField(blank=True, max_length=5, null=True)),
                ('zip', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_notes', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'client_details_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TClientListV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_client', models.IntegerField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('client_name', models.CharField(blank=True, max_length=200, null=True)),
                ('is_blocked', models.NullBooleanField()),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
                ('sum_payment_sum', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'client_list_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TClientNotAcceptedListV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_client', models.IntegerField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('client_name', models.CharField(blank=True, max_length=200, null=True)),
                ('is_rejected', models.NullBooleanField()),
                ('prefered_contact_type', models.CharField(blank=True, max_length=10, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'client_not_accepted_list_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TClientParamsV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_debt', models.TextField(blank=True, null=True)),
                ('default_reminder_sms_minutes', models.IntegerField(blank=True, null=True)),
                ('default_reminder_email_minutes', models.IntegerField(blank=True, null=True)),
                ('default_finished_info_sms', models.NullBooleanField()),
                ('default_finished_info_email', models.NullBooleanField()),
                ('max_worktime_wo_conf_minutes', models.IntegerField(blank=True, null=True)),
                ('default_currency', models.CharField(blank=True, max_length=10, null=True)),
                ('allow_new_no_contact', models.NullBooleanField()),
            ],
            options={
                'db_table': 'client_params_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TClientPaymentLineV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_cl_payment_line', models.IntegerField(blank=True, null=True)),
                ('se_dict_name', models.CharField(blank=True, max_length=200, null=True)),
                ('text_on_invoice', models.CharField(blank=True, max_length=200, null=True)),
                ('qty', models.FloatField(blank=True, null=True)),
                ('final_price', models.TextField(blank=True, null=True)),
                ('base_price', models.TextField(blank=True, null=True)),
                ('real_end', models.DateField(blank=True, null=True)),
                ('id_client', models.NullBooleanField()),
                ('invoice_voucher', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'client_payment_line_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TClientPaymentListAllV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_cl_payment', models.IntegerField(blank=True, null=True)),
                ('is_closed', models.NullBooleanField()),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('client_name', models.CharField(blank=True, max_length=200, null=True)),
                ('is_invoice', models.NullBooleanField()),
                ('payment_sum', models.TextField(blank=True, null=True)),
                ('payment_name', models.CharField(blank=True, max_length=200, null=True)),
                ('invoice_voucher', models.CharField(blank=True, max_length=15, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('paid_datetime', models.DateTimeField(blank=True, null=True)),
                ('posted_datetime', models.DateTimeField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'client_payment_list_all_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TClientPaymentListClosedV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_cl_payment', models.IntegerField(blank=True, null=True)),
                ('is_closed', models.NullBooleanField()),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('client_name', models.CharField(blank=True, max_length=200, null=True)),
                ('payment_name', models.CharField(blank=True, max_length=200, null=True)),
                ('is_invoice', models.NullBooleanField()),
                ('payment_sum', models.TextField(blank=True, null=True)),
                ('invoice_voucher', models.CharField(blank=True, max_length=15, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('paid_datetime', models.DateTimeField(blank=True, null=True)),
                ('posted_datetime', models.DateTimeField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'client_payment_list_closed_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TClientPaymentListPostedUnpaidV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_cl_payment', models.IntegerField(blank=True, null=True)),
                ('is_closed', models.NullBooleanField()),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('client_name', models.CharField(blank=True, max_length=200, null=True)),
                ('payment_name', models.CharField(blank=True, max_length=200, null=True)),
                ('is_invoice', models.NullBooleanField()),
                ('payment_sum', models.TextField(blank=True, null=True)),
                ('invoice_voucher', models.CharField(blank=True, max_length=15, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('paid_datetime', models.DateTimeField(blank=True, null=True)),
                ('posted_datetime', models.DateTimeField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'client_payment_list_posted_unpaid_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TClientPaymentListUnpostedV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_cl_payment', models.IntegerField(blank=True, null=True)),
                ('is_closed', models.NullBooleanField()),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('client_name', models.CharField(blank=True, max_length=200, null=True)),
                ('payment_name', models.CharField(blank=True, max_length=200, null=True)),
                ('is_invoice', models.NullBooleanField()),
                ('payment_sum', models.TextField(blank=True, null=True)),
                ('invoice_voucher', models.CharField(blank=True, max_length=15, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('paid_datetime', models.DateTimeField(blank=True, null=True)),
                ('posted_datetime', models.DateTimeField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'client_payment_list_unposted_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TClientPaymentV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_cl_payment_line', models.IntegerField(blank=True, null=True)),
                ('id_client', models.IntegerField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('client_name', models.CharField(blank=True, max_length=200, null=True)),
                ('nip', models.CharField(blank=True, max_length=11, null=True)),
                ('street', models.CharField(blank=True, max_length=100, null=True)),
                ('house_no', models.CharField(blank=True, max_length=5, null=True)),
                ('apartment_no', models.CharField(blank=True, max_length=5, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('zip', models.CharField(blank=True, max_length=10, null=True)),
                ('invoice_voucher', models.CharField(blank=True, max_length=15, null=True)),
                ('payment_sum', models.TextField(blank=True, null=True)),
                ('posted_datetime', models.DateTimeField(blank=True, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=10, null=True)),
                ('company_branch_company_name', models.CharField(blank=True, max_length=200, null=True)),
                ('company_branch_nip', models.CharField(blank=True, max_length=11, null=True)),
                ('company_branch_email', models.CharField(blank=True, max_length=50, null=True)),
                ('company_branch_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('company_branch_street', models.CharField(blank=True, max_length=100, null=True)),
                ('company_branch_house_no', models.CharField(blank=True, max_length=5, null=True)),
                ('company_branch_apartment_no', models.CharField(blank=True, max_length=5, null=True)),
                ('company_branch_city', models.CharField(blank=True, max_length=50, null=True)),
                ('company_branch_zip', models.CharField(blank=True, max_length=10, null=True)),
                ('company_branch_country', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'client_payment_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TDiscountV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_discount_dict', models.CharField(blank=True, max_length=10, null=True)),
                ('scope', models.CharField(blank=True, max_length=10, null=True)),
                ('discount_name', models.CharField(blank=True, max_length=100, null=True)),
                ('discount_amount', models.FloatField(blank=True, null=True)),
                ('discount_percent', models.FloatField(blank=True, null=True)),
                ('valid_from', models.DateField(blank=True, null=True)),
                ('valid_to', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'discount_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TLocationTypeDetailsV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_location_type', models.CharField(blank=True, max_length=10, null=True)),
                ('location_type_name', models.CharField(blank=True, max_length=200, null=True)),
                ('location_capacity', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'location_type_details_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TLocationTypeListV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_location_type', models.CharField(blank=True, max_length=10, null=True)),
                ('location_type_name', models.CharField(blank=True, max_length=200, null=True)),
                ('location_capacity', models.IntegerField(blank=True, null=True)),
                ('count_id_location', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'location_type_list_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TLocationV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_location', models.IntegerField(blank=True, null=True)),
                ('location_name', models.CharField(blank=True, max_length=200, null=True)),
                ('location_type_name', models.CharField(blank=True, max_length=200, null=True)),
                ('location_capacity', models.IntegerField(blank=True, null=True)),
                ('is_operational', models.NullBooleanField()),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'location_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TMachineIncomingServicesV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_machine', models.IntegerField(blank=True, null=True)),
                ('machine_type_name', models.CharField(blank=True, max_length=200, null=True)),
                ('last_service', models.DateField(blank=True, null=True)),
                ('service_interval', models.IntegerField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'machine_incoming_services_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TMachineTypeDetailsV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_machine_type', models.CharField(blank=True, max_length=10, null=True)),
                ('machine_type_name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'machine_type_details_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TMachineTypeListV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_machine_type', models.CharField(blank=True, max_length=10, null=True)),
                ('machine_type_name', models.CharField(blank=True, max_length=200, null=True)),
                ('count_id_machine', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'machine_type_list_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TMachineV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_machine', models.IntegerField(blank=True, null=True)),
                ('machine_name', models.CharField(blank=True, max_length=200, null=True)),
                ('machine_type_name', models.CharField(blank=True, max_length=200, null=True)),
                ('last_service', models.DateField(blank=True, null=True)),
                ('service_interval', models.IntegerField(blank=True, null=True)),
                ('is_operational', models.NullBooleanField()),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'machine_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TPaymentListOverdueV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_cl_payment', models.IntegerField(blank=True, null=True)),
                ('is_closed', models.NullBooleanField()),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('client_name', models.CharField(blank=True, max_length=200, null=True)),
                ('payment_name', models.CharField(blank=True, max_length=200, null=True)),
                ('is_invoice', models.NullBooleanField()),
                ('payment_sum', models.TextField(blank=True, null=True)),
                ('invoice_voucher', models.CharField(blank=True, max_length=15, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('paid_datetime', models.DateTimeField(blank=True, null=True)),
                ('posted_datetime', models.DateTimeField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'payment_list_overdue_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TResourcesUsageListV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calendar_date', models.DateField(blank=True, null=True)),
                ('max_time_slot', models.IntegerField(blank=True, null=True)),
                ('min_time_slot', models.IntegerField(blank=True, null=True)),
                ('client_last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('client_first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('client_name', models.CharField(blank=True, max_length=200, null=True)),
                ('se_dict_name', models.CharField(blank=True, max_length=200, null=True)),
                ('worker_first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('worker_last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('machine_name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'resources_usage_list_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TResourcesUsageParamsV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allow_using_machine_without_service_days_before_date', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'resources_usage_params_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TServiceAcceptV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_service', models.IntegerField(blank=True, null=True)),
                ('se_dict_name', models.CharField(blank=True, max_length=200, null=True)),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('client_name', models.CharField(blank=True, max_length=200, null=True)),
                ('location', models.IntegerField(blank=True, null=True)),
                ('service_discount_amount', models.TextField(blank=True, null=True)),
                ('service_discount_percent', models.FloatField(blank=True, null=True)),
                ('base_price', models.TextField(blank=True, null=True)),
                ('final_price', models.TextField(blank=True, null=True)),
                ('create_invoice', models.NullBooleanField()),
                ('worker_first_name', models.TextField(blank=True, null=True)),
                ('worker_last_name', models.TextField(blank=True, null=True)),
                ('planned_start', models.DateField(blank=True, null=True)),
                ('created_datetime', models.DateTimeField(blank=True, null=True)),
                ('planned_end', models.DateField(blank=True, null=True)),
                ('count_id_cl_payment', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'service_accept_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TServiceDetailsV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_code', models.CharField(blank=True, max_length=10, null=True)),
                ('is_confirmed', models.NullBooleanField()),
                ('min_start_datetime', models.DateTimeField(blank=True, null=True)),
                ('client', models.IntegerField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
                ('service_discount_amount', models.TextField(blank=True, null=True)),
                ('service_discount_percent', models.FloatField(blank=True, null=True)),
                ('reminder_sms_minutes', models.IntegerField(blank=True, null=True)),
                ('reminder_email_minutes', models.IntegerField(blank=True, null=True)),
                ('finished_info_sms', models.NullBooleanField()),
                ('create_invoice', models.NullBooleanField()),
                ('finished_info_email', models.NullBooleanField()),
            ],
            options={
                'db_table': 'service_details_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TServiceDictDetailsV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_se_dict', models.CharField(blank=True, max_length=10, null=True)),
                ('se_dict_name', models.CharField(blank=True, max_length=200, null=True)),
                ('location_type', models.CharField(blank=True, max_length=10, null=True)),
                ('avg_time', models.IntegerField(blank=True, null=True)),
                ('continous', models.NullBooleanField()),
                ('base_price', models.TextField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
                ('qty', models.FloatField(blank=True, null=True)),
                ('machine_type', models.CharField(blank=True, max_length=10, null=True)),
                ('worker_ability', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'service_dict_details_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TServiceDictListV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_se_dict', models.CharField(blank=True, max_length=10, null=True)),
                ('se_dict_name', models.CharField(blank=True, max_length=200, null=True)),
                ('location_type', models.CharField(blank=True, max_length=10, null=True)),
                ('continous', models.NullBooleanField()),
                ('avg_time', models.IntegerField(blank=True, null=True)),
                ('base_price', models.TextField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'service_dict_list_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TServiceListV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_service', models.IntegerField(blank=True, null=True)),
                ('se_dict_name', models.CharField(blank=True, max_length=200, null=True)),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('client_name', models.CharField(blank=True, max_length=200, null=True)),
                ('location_name', models.CharField(blank=True, max_length=200, null=True)),
                ('create_invoice', models.NullBooleanField()),
                ('invoice_voucher', models.CharField(blank=True, max_length=15, null=True)),
                ('base_price', models.TextField(blank=True, null=True)),
                ('final_price', models.TextField(blank=True, null=True)),
                ('planned_start', models.DateField(blank=True, null=True)),
                ('planned_end', models.DateField(blank=True, null=True)),
                ('real_start', models.DateField(blank=True, null=True)),
                ('real_end', models.DateField(blank=True, null=True)),
                ('paid_datetime', models.DateTimeField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
                ('confirmed_by', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'service_list_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TTimeSlotParamsV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_slot_minutes', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'time_slot_params_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TWorkdayCalendarV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_workday_calendar', models.DateField(blank=True, null=True)),
                ('is_workday', models.NullBooleanField()),
                ('work_start', models.DateField(blank=True, null=True)),
                ('work_end', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'workday_calendar_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TWorkerAbilityDetailsV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('worker', models.IntegerField(blank=True, null=True)),
                ('worker_ability', models.CharField(blank=True, max_length=10, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'worker_ability_details_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TWorkerAbilityDictDetailsV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_wo_ability_dict', models.CharField(blank=True, max_length=10, null=True)),
                ('ability_name', models.CharField(blank=True, max_length=200, null=True)),
                ('ability_group_name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'worker_ability_dict_details_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TWorkerAbilityDictListV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_wo_ability_dict', models.CharField(blank=True, max_length=10, null=True)),
                ('ability_name', models.CharField(blank=True, max_length=200, null=True)),
                ('ability_group_name', models.CharField(blank=True, max_length=200, null=True)),
                ('count_worker', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'worker_ability_dict_list_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TWorkerAbilityGroupDictDetailsV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_wo_ablility_group_dict', models.CharField(blank=True, max_length=10, null=True)),
                ('ability_group_name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'worker_ability_group_dict_details_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TWorkerAbilityGroupDictListV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ability_group_name', models.CharField(blank=True, max_length=200, null=True)),
                ('id_wo_ablility_group_dict', models.CharField(blank=True, max_length=10, null=True)),
                ('count_id_wo_ability_dict', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'worker_ability_group_dict_list_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TWorkerAbilityListV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_worker', models.IntegerField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('ability_name', models.CharField(blank=True, max_length=200, null=True)),
                ('ability_group_name', models.CharField(blank=True, max_length=200, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'worker_ability_list_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TWorkerAbsenceAllV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_wo_absence', models.IntegerField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('absence_name', models.CharField(blank=True, max_length=200, null=True)),
                ('start_datetime', models.DateTimeField(blank=True, null=True)),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'worker_absence_all_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TWorkerAbsenceCalendarV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_workday_calendar', models.DateField(blank=True, null=True)),
                ('is_workday', models.NullBooleanField()),
                ('absence_type', models.CharField(blank=True, max_length=10, null=True)),
                ('start_datetime', models.DateTimeField(blank=True, null=True)),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'worker_absence_calendar_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TWorkerAbsenceCurrentV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_wo_absence', models.IntegerField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('absence_name', models.CharField(blank=True, max_length=200, null=True)),
                ('start_datetime', models.DateTimeField(blank=True, null=True)),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'worker_absence_current_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TWorkerAbsenceDetailsV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('worker', models.IntegerField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('absence_name', models.CharField(blank=True, max_length=200, null=True)),
                ('start_datetime', models.DateTimeField(blank=True, null=True)),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'worker_absence_details_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TWorkerAbsenceEndedV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_wo_absence', models.IntegerField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('absence_name', models.CharField(blank=True, max_length=200, null=True)),
                ('start_datetime', models.DateTimeField(blank=True, null=True)),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'worker_absence_ended_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TWorkerAbsenceFutureV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_wo_absence', models.IntegerField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('absence_name', models.CharField(blank=True, max_length=200, null=True)),
                ('start_datetime', models.DateTimeField(blank=True, null=True)),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'worker_absence_future_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TWorkerAbsenceHourV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_wo_absence', models.IntegerField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('absence_name', models.CharField(blank=True, max_length=200, null=True)),
                ('start_datetime', models.DateTimeField(blank=True, null=True)),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'worker_absence_hour_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TWorkerAbsenceOtherV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_wo_absence', models.IntegerField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('absence_name', models.CharField(blank=True, max_length=200, null=True)),
                ('start_datetime', models.DateTimeField(blank=True, null=True)),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'worker_absence_other_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TWorkerAbsenceRecreationalV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_wo_absence', models.IntegerField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('absence_name', models.CharField(blank=True, max_length=200, null=True)),
                ('start_datetime', models.DateTimeField(blank=True, null=True)),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'worker_absence_recreational_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TWorkerAbsenceSickV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_wo_absence', models.IntegerField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('absence_name', models.CharField(blank=True, max_length=200, null=True)),
                ('start_datetime', models.DateTimeField(blank=True, null=True)),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'worker_absence_sick_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TWorkerDetailsV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_worker', models.IntegerField(blank=True, null=True)),
                ('active', models.NullBooleanField()),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('worker_title', models.CharField(blank=True, max_length=200, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
                ('prefered_contact_type', models.CharField(blank=True, max_length=10, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('street', models.CharField(blank=True, max_length=100, null=True)),
                ('house_no', models.CharField(blank=True, max_length=5, null=True)),
                ('apartment_no', models.CharField(blank=True, max_length=5, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('zip', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('notes1', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'worker_details_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TWorkerGroupDictDetailsV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_wo_group_dict', models.CharField(blank=True, max_length=10, null=True)),
                ('worker_group_name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'worker_group_dict_details_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TWorkerGroupDictListV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_wo_group_dict', models.CharField(blank=True, max_length=10, null=True)),
                ('worker_group_name', models.CharField(blank=True, max_length=200, null=True)),
                ('count_worker', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'worker_group_dict_list_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TWorkerGroupPrivilegeV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view_id', models.CharField(blank=True, max_length=100, null=True)),
                ('privilege_level', models.CharField(blank=True, max_length=10, null=True)),
                ('worker_group_name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'worker_group_privilege_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TWorkerListActiveV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_worker', models.IntegerField(blank=True, null=True)),
                ('active', models.NullBooleanField()),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('worker_title', models.CharField(blank=True, max_length=200, null=True)),
                ('sum_worker_group_name', models.TextField(blank=True, null=True)),
                ('min_start_datetime', models.DateTimeField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'worker_list_active_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TWorkerListAllV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_worker', models.IntegerField(blank=True, null=True)),
                ('active', models.NullBooleanField()),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('worker_title', models.CharField(blank=True, max_length=200, null=True)),
                ('sum_worker_group_name', models.TextField(blank=True, null=True)),
                ('min_start_datetime', models.DateTimeField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'worker_list_all_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TWorkerListInactiveV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_worker', models.IntegerField(blank=True, null=True)),
                ('active', models.NullBooleanField()),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('worker_title', models.CharField(blank=True, max_length=200, null=True)),
                ('sum_worker_group_name', models.TextField(blank=True, null=True)),
                ('min_start_datetime', models.DateTimeField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'worker_list_inactive_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TWorkerListIncomingLeaveV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_worker', models.IntegerField(blank=True, null=True)),
                ('active', models.NullBooleanField()),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('worker_title', models.CharField(blank=True, max_length=200, null=True)),
                ('sum_worker_group_name', models.TextField(blank=True, null=True)),
                ('min_start_datetime', models.DateTimeField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'worker_list_incoming_leave_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TWorkerListOnLeaveV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_worker', models.IntegerField(blank=True, null=True)),
                ('active', models.NullBooleanField()),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('worker_title', models.CharField(blank=True, max_length=200, null=True)),
                ('sum_worker_group_name', models.TextField(blank=True, null=True)),
                ('min_start_datetime', models.DateTimeField(blank=True, null=True)),
                ('worker_group_name', models.CharField(blank=True, max_length=200, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'worker_list_on_leave_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TWorkerUserDetailsV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_user', models.CharField(blank=True, max_length=10, null=True)),
                ('worker', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'worker_user_details_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TWorkerUserListV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_user', models.CharField(blank=True, max_length=10, null=True)),
                ('worker', models.IntegerField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('worker_title', models.CharField(blank=True, max_length=200, null=True)),
                ('active', models.NullBooleanField()),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'worker_user_list_v',
                'managed': False,
            },
        ),
    ]
