# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-11-16 12:58
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('company', '0001_initial'),
        ('utilities', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClBlockedReasonDict',
            fields=[
                ('id_cl_blocked_reason_dict', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('blocked_reason_name', models.CharField(blank=True, max_length=200, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Pow√≥d blokady',
                'verbose_name_plural': 'Powody blokady',
                'db_table': 'cl_blocked_reason_dict',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClCommunicationLog',
            fields=[
                ('id_cl_communication_log', models.AutoField(primary_key=True, serialize=False)),
                ('contact_address', models.CharField(blank=True, max_length=100, null=True)),
                ('message_body', models.TextField(blank=True, null=True)),
                ('minutes_before_action', models.IntegerField(blank=True, null=True)),
                ('notes', models.IntegerField(blank=True, null=True)),
                ('created_datetime', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'verbose_name': 'Komunikacja z klientem',
                'verbose_name_plural': 'Log komunikacji z klientami',
                'db_table': 'cl_communication_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClCommunicationReason',
            fields=[
                ('id_client_communication_reason', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('reason_name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Powod komunikacji',
                'verbose_name_plural': 'Slownik powodow komunikacji',
                'db_table': 'cl_communication_reason',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClDiscount',
            fields=[
                ('id_cl_discount', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Znizka dla klienta',
                'verbose_name_plural': 'Znizki dla klientow',
                'db_table': 'cl_discount',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClParams',
            fields=[
                ('id_cl_params', models.AutoField(db_column='cl_params_id', primary_key=True, serialize=False)),
                ('max_debt', models.FloatField()),
                ('allow_new_no_contact', models.BooleanField()),
                ('default_reminder_sms_minutes', models.IntegerField()),
                ('default_reminder_email_minutes', models.IntegerField()),
                ('default_finished_info_sms', models.BooleanField()),
                ('default_finished_info_email', models.BooleanField()),
                ('max_worktime_wo_conf_minutes', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Parametry modulu klienta',
                'verbose_name_plural': 'Parametry modulu klienta',
                'db_table': 'cl_params',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClPayment',
            fields=[
                ('id_cl_payment', models.AutoField(primary_key=True, serialize=False)),
                ('is_closed', models.NullBooleanField()),
                ('payment_name', models.CharField(blank=True, max_length=200, null=True)),
                ('is_invoice', models.NullBooleanField()),
                ('invoice_voucher', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('payment_sum', models.FloatField(blank=True, null=True)),
                ('paid_amount', models.FloatField(blank=True, null=True)),
                ('paid_datetime', models.DateTimeField(blank=True, null=True)),
                ('posted_datetime', models.DateTimeField(blank=True, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
                ('created_datetime', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'verbose_name': 'Platnosc klienta',
                'verbose_name_plural': 'Platnosci klientow',
                'db_table': 'cl_payment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClPaymentLine',
            fields=[
                ('id_cl_payment_line', models.AutoField(primary_key=True, serialize=False)),
                ('text_on_invoice', models.CharField(max_length=200)),
                ('qty', models.FloatField(blank=True, null=True)),
                ('final_price', models.FloatField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Linia platnosci klienta',
                'verbose_name_plural': 'Linie platnosci klientow',
                'db_table': 'cl_payment_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClUnconfirmed',
            fields=[
                ('cl_unconfirmed', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('client_name', models.CharField(blank=True, max_length=200, null=True)),
                ('created_datetime', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'verbose_name': 'Niepotwierdzony klient',
                'verbose_name_plural': 'Niepotwierdzeni klienci',
                'db_table': 'cl_unconfirmed',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DiscountDict',
            fields=[
                ('id_discount_dict', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('discount_name', models.CharField(blank=True, max_length=100, null=True)),
                ('discount_amount', models.FloatField(blank=True, null=True)),
                ('discount_percent', models.FloatField(blank=True, null=True)),
                ('valid_from', models.DateField(blank=True, null=True)),
                ('valid_to', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Znizka',
                'verbose_name_plural': 'Slownik znizek',
                'db_table': 'discount_dict',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DiscountScope',
            fields=[
                ('id_discount_scope', models.CharField(max_length=10, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'discount_scope',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id_client', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('is_company', models.NullBooleanField(default=False)),
                ('client_name', models.CharField(blank=True, max_length=200, null=True)),
                ('nip', models.CharField(blank=True, max_length=11, null=True)),
                ('is_blocked', models.NullBooleanField(default=False)),
                ('blocked_notes', models.CharField(blank=True, max_length=400, null=True)),
                ('default_invoice', models.NullBooleanField(default=True)),
                ('default_reminder_sms_minutes', models.IntegerField(blank=True, null=True)),
                ('is_confirmed', models.NullBooleanField(default=True)),
                ('is_rejected', models.NullBooleanField(default=False)),
                ('ip_address', models.CharField(blank=True, max_length=20, null=True)),
                ('default_reminder_email_minutes', models.IntegerField(blank=True, null=True)),
                ('default_finished_info_sms', models.IntegerField(blank=True, null=True)),
                ('default_finished_info_email', models.IntegerField(blank=True, null=True)),
                ('client_discount_percent_sum', models.FloatField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
                ('address', models.ForeignKey(blank=True, db_column='address', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='utilities.Address')),
                ('blocked_reason', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='clients.ClBlockedReasonDict')),
                ('default_company_branch', models.ForeignKey(db_column='default_company_branch', default='main', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='company.CompanyBranch')),
                ('sex', models.ForeignKey(blank=True, db_column='sex', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='utilities.SexDict')),
            ],
            options={
                'verbose_name': 'Klinet',
                'verbose_name_plural': 'Lista klientow',
                'db_table': 'client',
                'managed': True,
            },
        ),
    ]
